{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "mount_file_id": "1wYKfaUqBSlScqx9OavEEJWA1G_AQx1Um",
      "authorship_tag": "ABX9TyMMuxb2HEJrAWgl6xvMQS3t",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/zhrldnpftl/DKU-Capstone-DeepPhish/blob/main/Voice-context-Detection/1.%EC%9D%8C%EC%84%B1%ED%8C%8C%EC%9D%BC_wav%EB%B3%80%ED%99%98\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 보이스 피싱 탐지 모델 - 1\n",
        "\n",
        "[데이터셋]\n",
        "- 정상 데이터 : 복지 분야 콜센터 상담데이터 (mp3 형태)\n",
        "-      > 경로  : \"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset\"\n",
        "- 피싱 데이터 : 금융감독원 데이터 (mp4, mp3 형태)\n",
        "-      > 경로  : \"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/phishing_dataset/FSS_voicephishing_data\"\n",
        "-  피싱 데이터 : KorCCVi 데이터 (csv 형태)\n",
        "-      > 경로  : \"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/phishing_dataset/KorCCVi_dataset\""
      ],
      "metadata": {
        "id": "_CaKvFePfCD-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 데이터 전처리 목표 단계\n",
        "0. 프로젝트 경로 설정 및 라이브러리 설치\n",
        "1. 데이터 디렉토리 로드\n",
        "2. 음성 데이터 wav 변환\n",
        "3. 데이터 전처리 (16kHz 변환, mono 변환, max_length 계산)\n",
        "4. 라벨링"
      ],
      "metadata": {
        "id": "ME65mk40gDJm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 0. 프로젝트 경로 설정 및 라이브러리 설치"
      ],
      "metadata": {
        "id": "c_QswkGlgFFY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 프로젝트 경로 설정\n",
        "from pathlib import Path\n",
        "\n",
        "project_path = Path(\"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model\")"
      ],
      "metadata": {
        "id": "89Yh-uQDgGjX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 경로 안에 datasset 폴더 생성\n",
        "import os\n",
        "\n",
        "# 데이터셋 폴더 경로 지정\n",
        "dataset_path = os.path.join(project_path, \"dataset\")\n",
        "\n",
        "# 폴더 생성 (이미 존재해도 에러 발생 X)\n",
        "os.makedirs(dataset_path, exist_ok=True)\n",
        "\n",
        "# 경로 확인 출력\n",
        "print(f\"📁 데이터셋 경로: {dataset_path}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YEH8FrWygHmZ",
        "outputId": "884fb8b8-a4b0-4214-f1c8-b9b710de0bba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "📁 데이터셋 경로: /content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Huuggingface Transformers와 Datasets 설치 (처음 1회만 설치 필요)\n",
        "!pip install transformers datasets librosa jiwer"
      ],
      "metadata": {
        "id": "bObIta85gSar",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d05be180-008b-43a2-ad96-b451f96af184"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: transformers in /usr/local/lib/python3.11/dist-packages (4.51.3)\n",
            "Collecting datasets\n",
            "  Downloading datasets-3.5.1-py3-none-any.whl.metadata (19 kB)\n",
            "Requirement already satisfied: librosa in /usr/local/lib/python3.11/dist-packages (0.11.0)\n",
            "Collecting jiwer\n",
            "  Downloading jiwer-3.1.0-py3-none-any.whl.metadata (2.6 kB)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from transformers) (3.18.0)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.30.0 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.30.2)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.11/dist-packages (from transformers) (2.0.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from transformers) (24.2)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from transformers) (6.0.2)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.11/dist-packages (from transformers) (2024.11.6)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from transformers) (2.32.3)\n",
            "Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.21.1)\n",
            "Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.5.3)\n",
            "Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.11/dist-packages (from transformers) (4.67.1)\n",
            "Requirement already satisfied: pyarrow>=15.0.0 in /usr/local/lib/python3.11/dist-packages (from datasets) (18.1.0)\n",
            "Collecting dill<0.3.9,>=0.3.0 (from datasets)\n",
            "  Downloading dill-0.3.8-py3-none-any.whl.metadata (10 kB)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (from datasets) (2.2.2)\n",
            "Collecting xxhash (from datasets)\n",
            "  Downloading xxhash-3.5.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\n",
            "Collecting multiprocess<0.70.17 (from datasets)\n",
            "  Downloading multiprocess-0.70.16-py311-none-any.whl.metadata (7.2 kB)\n",
            "Collecting fsspec<=2025.3.0,>=2023.1.0 (from fsspec[http]<=2025.3.0,>=2023.1.0->datasets)\n",
            "  Downloading fsspec-2025.3.0-py3-none-any.whl.metadata (11 kB)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.11/dist-packages (from datasets) (3.11.15)\n",
            "Requirement already satisfied: audioread>=2.1.9 in /usr/local/lib/python3.11/dist-packages (from librosa) (3.0.1)\n",
            "Requirement already satisfied: numba>=0.51.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (0.60.0)\n",
            "Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.15.2)\n",
            "Requirement already satisfied: scikit-learn>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.6.1)\n",
            "Requirement already satisfied: joblib>=1.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.4.2)\n",
            "Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (4.4.2)\n",
            "Requirement already satisfied: soundfile>=0.12.1 in /usr/local/lib/python3.11/dist-packages (from librosa) (0.13.1)\n",
            "Requirement already satisfied: pooch>=1.1 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.8.2)\n",
            "Requirement already satisfied: soxr>=0.3.2 in /usr/local/lib/python3.11/dist-packages (from librosa) (0.5.0.post1)\n",
            "Requirement already satisfied: typing_extensions>=4.1.1 in /usr/local/lib/python3.11/dist-packages (from librosa) (4.13.2)\n",
            "Requirement already satisfied: lazy_loader>=0.1 in /usr/local/lib/python3.11/dist-packages (from librosa) (0.4)\n",
            "Requirement already satisfied: msgpack>=1.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.1.0)\n",
            "Requirement already satisfied: click>=8.1.8 in /usr/local/lib/python3.11/dist-packages (from jiwer) (8.1.8)\n",
            "Collecting rapidfuzz>=3.9.7 (from jiwer)\n",
            "  Downloading rapidfuzz-3.13.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets) (2.6.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets) (1.3.2)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets) (25.3.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets) (1.6.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets) (6.4.3)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets) (0.3.1)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets) (1.20.0)\n",
            "Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /usr/local/lib/python3.11/dist-packages (from numba>=0.51.0->librosa) (0.43.0)\n",
            "Requirement already satisfied: platformdirs>=2.5.0 in /usr/local/lib/python3.11/dist-packages (from pooch>=1.1->librosa) (4.3.7)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2025.4.26)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=1.1.0->librosa) (3.6.0)\n",
            "Requirement already satisfied: cffi>=1.0 in /usr/local/lib/python3.11/dist-packages (from soundfile>=0.12.1->librosa) (1.17.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets) (2025.2)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.0->soundfile>=0.12.1->librosa) (2.22)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas->datasets) (1.17.0)\n",
            "Downloading datasets-3.5.1-py3-none-any.whl (491 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m491.4/491.4 kB\u001b[0m \u001b[31m9.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading jiwer-3.1.0-py3-none-any.whl (22 kB)\n",
            "Downloading dill-0.3.8-py3-none-any.whl (116 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m8.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading fsspec-2025.3.0-py3-none-any.whl (193 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m193.6/193.6 kB\u001b[0m \u001b[31m13.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading multiprocess-0.70.16-py311-none-any.whl (143 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m143.5/143.5 kB\u001b[0m \u001b[31m11.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading rapidfuzz-3.13.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m58.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading xxhash-3.5.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.8/194.8 kB\u001b[0m \u001b[31m13.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: xxhash, rapidfuzz, fsspec, dill, multiprocess, jiwer, datasets\n",
            "  Attempting uninstall: fsspec\n",
            "    Found existing installation: fsspec 2025.3.2\n",
            "    Uninstalling fsspec-2025.3.2:\n",
            "      Successfully uninstalled fsspec-2025.3.2\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "gcsfs 2025.3.2 requires fsspec==2025.3.2, but you have fsspec 2025.3.0 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cublas-cu12==12.4.5.8; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cublas-cu12 12.5.3.2 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cuda-cupti-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-cupti-cu12 12.5.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cuda-nvrtc-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-nvrtc-cu12 12.5.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cuda-runtime-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-runtime-cu12 12.5.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cudnn-cu12==9.1.0.70; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cudnn-cu12 9.3.0.75 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cufft-cu12==11.2.1.3; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cufft-cu12 11.2.3.61 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-curand-cu12==10.3.5.147; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-curand-cu12 10.3.6.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cusolver-cu12==11.6.1.9; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cusolver-cu12 11.6.3.83 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cusparse-cu12==12.3.1.170; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cusparse-cu12 12.5.1.3 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-nvjitlink-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-nvjitlink-cu12 12.5.82 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0mSuccessfully installed datasets-3.5.1 dill-0.3.8 fsspec-2025.3.0 jiwer-3.1.0 multiprocess-0.70.16 rapidfuzz-3.13.0 xxhash-3.5.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# fsspec 버전 문제로 추가 설치 (처음 1회만 필요)\n",
        "!pip install fsspec==2023.6.0"
      ],
      "metadata": {
        "id": "-8z8qwG4gVfd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f492e98d-9c2d-47a2-e94f-4ca93a69354a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting fsspec==2023.6.0\n",
            "  Downloading fsspec-2023.6.0-py3-none-any.whl.metadata (6.7 kB)\n",
            "Downloading fsspec-2023.6.0-py3-none-any.whl (163 kB)\n",
            "\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/163.8 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━\u001b[0m \u001b[32m153.6/163.8 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m163.8/163.8 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: fsspec\n",
            "  Attempting uninstall: fsspec\n",
            "    Found existing installation: fsspec 2025.3.0\n",
            "    Uninstalling fsspec-2025.3.0:\n",
            "      Successfully uninstalled fsspec-2025.3.0\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "gcsfs 2025.3.2 requires fsspec==2025.3.2, but you have fsspec 2023.6.0 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cublas-cu12==12.4.5.8; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cublas-cu12 12.5.3.2 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cuda-cupti-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-cupti-cu12 12.5.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cuda-nvrtc-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-nvrtc-cu12 12.5.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cuda-runtime-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-runtime-cu12 12.5.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cudnn-cu12==9.1.0.70; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cudnn-cu12 9.3.0.75 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cufft-cu12==11.2.1.3; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cufft-cu12 11.2.3.61 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-curand-cu12==10.3.5.147; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-curand-cu12 10.3.6.82 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cusolver-cu12==11.6.1.9; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cusolver-cu12 11.6.3.83 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-cusparse-cu12==12.3.1.170; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cusparse-cu12 12.5.1.3 which is incompatible.\n",
            "torch 2.6.0+cu124 requires nvidia-nvjitlink-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-nvjitlink-cu12 12.5.82 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0mSuccessfully installed fsspec-2023.6.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 기본 라이브러리 임포트\n",
        "import os\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import librosa                  # 오디오 전처리용\n",
        "from datasets import load_dataset, Dataset, Audio\n",
        "# Transformers 관련\n",
        "from transformers import Wav2Vec2FeatureExtractor, Wav2Vec2Processor"
      ],
      "metadata": {
        "id": "XC6deTemgVxk",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 405
        },
        "outputId": "3163bc01-f406-48bc-af87-b748c4aeaaa1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ModuleNotFoundError",
          "evalue": "No module named 'datasets'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-3-80e528c9d142>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mlibrosa\u001b[0m                  \u001b[0;31m# 오디오 전처리용\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mdatasets\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mload_dataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mDataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAudio\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0;31m# Transformers 관련\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtransformers\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mWav2Vec2FeatureExtractor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mWav2Vec2Processor\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'datasets'",
            "",
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"
          ],
          "errorDetails": {
            "actions": [
              {
                "action": "open_url",
                "actionText": "Open Examples",
                "url": "/notebooks/snippets/importing_libraries.ipynb"
              }
            ]
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 1. 데이터 디렉토리 로드"
      ],
      "metadata": {
        "id": "9dErgXKvgaWx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터 디렉토리 설정\n",
        "\n",
        "# mp3 디렉토리 (phshing_dataset)\n",
        "phishing_mp3_1_dir = project_path / \"dataset\" / \"phishing_dataset\" / \"FSS_voicephishing_data\" / \"mp3\" / \"대출사기형\"\n",
        "phishing_mp3_2_dir = project_path / \"dataset\" / \"phishing_dataset\" / \"FSS_voicephishing_data\" / \"mp3\" / \"수사기관_사칭형\"\n",
        "phishing_mp3_3_dir = project_path / \"dataset\" / \"phishing_dataset\" / \"FSS_voicephishing_data\" / \"mp3\" / \"기타유형\"\n",
        "# mp4 디렉토리 (phshing_dataset)\n",
        "phishing_mp4_dir = project_path / \"dataset\" / \"phishing_dataset\" / \"FSS_voicephishing_data\" / \"mp4\"\n",
        "# wav 디렉토리 (phshing_dataset)\n",
        "phishing_wav_dir = project_path / \"dataset\" / \"phishing_dataset\" / \"FSS_voicephishing_data\" / \"wav\"\n",
        "\n",
        "# mp3 디렉토리 (normal_dataset)\n",
        "normal_mp3_dir = project_path / \"dataset\" / \"normal_dataset\" / \"mp3\"\n",
        "# wav 디렉토리 (normal_dataset)\n",
        "normal_wav_dir = project_path / \"dataset\" / \"normal_dataset\" / \"wav\""
      ],
      "metadata": {
        "id": "BCntn9SPgc2l"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 2. 음성 데이터 wav 변환"
      ],
      "metadata": {
        "id": "mhaxGuK9gvEJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# moviepy 설치\n",
        "#!pip uninstall -y moviepy\n",
        "#!pip install moviepy"
      ],
      "metadata": {
        "id": "mIHa0kAHgenY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 라이브러리 임포트\n",
        "from moviepy.video.io.VideoFileClip import VideoFileClip\n",
        "import os\n",
        "import sys\n",
        "import moviepy"
      ],
      "metadata": {
        "id": "d8ppvrtfgwXu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "[1] normal_data"
      ],
      "metadata": {
        "id": "HjdtPUMcgxam"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# pydub 라이브러리 설치\n",
        "#!pip install pydub"
      ],
      "metadata": {
        "id": "h5WHt8uygymb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from pathlib import Path\n",
        "\n",
        "# 프로젝트 경로 설정\n",
        "normal_mp3_dir = Path(\"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset/mp3\")\n",
        "normal_wav_dir = Path(\"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset/wav\")\n",
        "\n",
        "# 디버깅: MP3 디렉토리 확인\n",
        "print(f\"MP3 디렉토리 경로: {normal_mp3_dir}\")\n",
        "print(f\"MP3 디렉토리 존재 여부: {normal_mp3_dir.exists()}\")\n",
        "\n",
        "print(f\"WAV 디렉토리 경로: {normal_wav_dir}\")\n",
        "print(f\"WAV 디렉토리 존재 여부: {normal_wav_dir.exists()}\")"
      ],
      "metadata": {
        "id": "igKkCyMag-2d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1fdd361b-9c03-46fc-9b7e-e91b03f9fc9a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MP3 디렉토리 경로: /content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset/mp3\n",
            "MP3 디렉토리 존재 여부: True\n",
            "WAV 디렉토리 경로: /content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset/wav\n",
            "WAV 디렉토리 존재 여부: True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pydub import AudioSegment\n",
        "from pathlib import Path\n",
        "import csv\n",
        "import os\n",
        "\n",
        "# 프로젝트 경로 설정\n",
        "normal_mp3_dir = Path(\"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset/mp3\")\n",
        "normal_wav_dir = Path(\"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset/wav\")\n",
        "\n",
        "# 디버깅: MP3 디렉토리 확인\n",
        "print(f\"MP3 디렉토리 경로: {normal_mp3_dir}\")\n",
        "print(f\"MP3 디렉토리 존재 여부: {normal_mp3_dir.exists()}\")\n",
        "\n",
        "print(f\"WAV 디렉토리 경로: {normal_wav_dir}\")\n",
        "print(f\"WAV 디렉토리 존재 여부: {normal_wav_dir.exists()}\")\n",
        "\n",
        "# MP3 파일 목록 확인\n",
        "mp3_files = list(normal_mp3_dir.glob(\"*.mp3\"))\n",
        "print(f\"발견된 MP3 파일 수: {len(mp3_files)}\")\n",
        "if len(mp3_files) > 0:\n",
        "    print(f\"첫 번째 MP3 파일: {mp3_files[0]}\")\n",
        "    print(f\"첫 번째 MP3 파일 존재 여부: {mp3_files[0].exists()}\")\n",
        "\n",
        "# CSV 파일 경로\n",
        "metadata_csv_path = normal_wav_dir / \"metadata.csv\"\n",
        "\n",
        "# 변환 및 메타데이터 저장 (오류 처리 개선)\n",
        "successful_conversions = 0\n",
        "failed_conversions = 0\n",
        "\n",
        "with open(metadata_csv_path, mode=\"w\", newline='', encoding=\"utf-8\") as csvfile:\n",
        "    writer = csv.writer(csvfile)\n",
        "    writer.writerow([\"filename\", \"label\", \"source_path\"])  # 헤더\n",
        "\n",
        "    for mp3_file in mp3_files:\n",
        "        try:\n",
        "            # Path 객체 사용하여 일관된 경로 처리\n",
        "            clean_filename = mp3_file.stem\n",
        "            wav_filename = f\"normal_{clean_filename}.wav\"\n",
        "            wav_path = normal_wav_dir / wav_filename\n",
        "\n",
        "            print(f\"변환 시도 중: {mp3_file} -> {wav_path}\")\n",
        "\n",
        "            # 파일 존재 여부 명시적 확인\n",
        "            if not mp3_file.exists():\n",
        "                print(f\"⚠️ 파일이 존재하지 않음: {mp3_file}\")\n",
        "                failed_conversions += 1\n",
        "                continue\n",
        "\n",
        "            # 파일 크기 확인 (0바이트 파일 감지)\n",
        "            if mp3_file.stat().st_size == 0:\n",
        "                print(f\"⚠️ 빈 파일 (0바이트): {mp3_file}\")\n",
        "                failed_conversions += 1\n",
        "                continue\n",
        "\n",
        "            # 오디오 변환\n",
        "            audio = AudioSegment.from_mp3(mp3_file)\n",
        "            audio.export(wav_path, format=\"wav\")\n",
        "\n",
        "            # CSV에 정보 추가\n",
        "            writer.writerow([wav_filename, \"normal\", str(mp3_file)])\n",
        "            successful_conversions += 1\n",
        "            print(f\"✅ 변환 완료: {wav_filename}\")\n",
        "\n",
        "        except Exception as e:\n",
        "            print(f\"⚠️ 변환 실패 ({mp3_file.name}): {e}\")\n",
        "            # 더 자세한 오류 정보 출력\n",
        "            import traceback\n",
        "            traceback.print_exc()\n",
        "            failed_conversions += 1\n",
        "\n",
        "print(f\"\\n===== 변환 결과 =====\")\n",
        "print(f\"성공: {successful_conversions} 파일\")\n",
        "print(f\"실패: {failed_conversions} 파일\")"
      ],
      "metadata": {
        "id": "Q0nZt6g3g_yc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "[2] phishing_data"
      ],
      "metadata": {
        "id": "p6du7Yp8hITK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "(1) mp4 -> mp3 변환"
      ],
      "metadata": {
        "id": "BwwopuJNhNfs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 라이브러리 임포트\n",
        "from moviepy.editor import VideoFileClip\n",
        "import os\n",
        "\n",
        "# mp4 -> mp3 변환 저장 디렉토리\n",
        "mp3_output_dir = project_path / \"dataset\" / \"phishing_dataset\" / \"FSS_voicephishing_data\" / \"mp3\" / \"기타유형\"\n",
        "os.makedirs(mp3_output_dir, exist_ok=True)\n",
        "\n",
        "# 변환 시작\n",
        "for filename in os.listdir(mp4_dir):\n",
        "    if filename.endswith(\".mp4\"):\n",
        "        mp4_path = os.path.join(mp4_dir, filename)\n",
        "        mp3_filename = os.path.splitext(filename)[0] + \".mp3\"\n",
        "        mp3_path = os.path.join(mp3_output_dir, mp3_filename)\n",
        "\n",
        "        try:\n",
        "            video = VideoFileClip(mp4_path)\n",
        "            video.audio.write_audiofile(mp3_path)\n",
        "            print(f\"🎵 변환 완료: {mp3_filename}\")\n",
        "        except Exception as e:\n",
        "            print(f\"⚠️ 변환 실패 ({filename}): {e}\")"
      ],
      "metadata": {
        "id": "IEYhUmXchSCX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "(2) mp3 -> wav 변환"
      ],
      "metadata": {
        "id": "UAbM3bVbhsiA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# pydub 라이브러리 설치\n",
        "#!pip install pydub\n",
        "#!apt-get install ffmpeg -y"
      ],
      "metadata": {
        "id": "wjtPbR1ghu99"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from pydub import AudioSegment\n",
        "import os\n",
        "import csv\n",
        "\n",
        "# 디렉토리들\n",
        "mp3_dirs = {\n",
        "    \"대출사기형\": \"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/FSS_voicephishing_data/mp3/대출사기형\",\n",
        "    \"수사기관_사칭형\": \"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/FSS_voicephishing_data/mp3/수사기관_사칭형\",\n",
        "    \"기타\": \"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/FSS_voicephishing_data/mp3/mp3_from_mp4\"  # 예시용\n",
        "}\n",
        "\n",
        "# 메타데이터 저장용 CSV 파일 경로\n",
        "metadata_csv_path = os.path.join(wav_dir, \"metadata.csv\")\n",
        "\n",
        "# 변환 및 메타데이터 저장\n",
        "with open(metadata_csv_path, mode=\"w\", newline='', encoding=\"utf-8\") as csvfile:\n",
        "    writer = csv.writer(csvfile)\n",
        "    writer.writerow([\"filename\", \"label\", \"source_path\"])  # 헤더\n",
        "\n",
        "    for label, mp3_dir in mp3_dirs.items():\n",
        "        for filename in os.listdir(mp3_dir):\n",
        "            if filename.endswith(\".mp3\"):\n",
        "                mp3_path = os.path.join(mp3_dir, filename)\n",
        "                # 라벨_원래이름.wav 형태로 저장\n",
        "                clean_filename = os.path.splitext(filename)[0]\n",
        "                wav_filename = f\"{label}_{clean_filename}.wav\"\n",
        "                wav_path = os.path.join(wav_dir, wav_filename)\n",
        "\n",
        "                try:\n",
        "                    audio = AudioSegment.from_mp3(mp3_path)\n",
        "                    audio.export(wav_path, format=\"wav\")\n",
        "                    writer.writerow([wav_filename, label, mp3_path])\n",
        "                    print(f\"🔊 변환 및 저장 완료: {wav_filename}\")\n",
        "                except Exception as e:\n",
        "                    print(f\"⚠️ 변환 실패 ({filename}): {e}\")"
      ],
      "metadata": {
        "id": "NiWtvwL8h0MQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 3. 데이터 전처리 (16kHz 변환, mono 변환, max_length 계산)"
      ],
      "metadata": {
        "id": "sEvuHIVnBQ0_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pydub librosa soundfile"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o0d_Jm0xBXX_",
        "outputId": "e6386797-be38-45af-fa84-62a522513ff2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pydub\n",
            "  Downloading pydub-0.25.1-py2.py3-none-any.whl.metadata (1.4 kB)\n",
            "Requirement already satisfied: librosa in /usr/local/lib/python3.11/dist-packages (0.11.0)\n",
            "Requirement already satisfied: soundfile in /usr/local/lib/python3.11/dist-packages (0.13.1)\n",
            "Requirement already satisfied: audioread>=2.1.9 in /usr/local/lib/python3.11/dist-packages (from librosa) (3.0.1)\n",
            "Requirement already satisfied: numba>=0.51.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (0.60.0)\n",
            "Requirement already satisfied: numpy>=1.22.3 in /usr/local/lib/python3.11/dist-packages (from librosa) (2.0.2)\n",
            "Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.15.2)\n",
            "Requirement already satisfied: scikit-learn>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.6.1)\n",
            "Requirement already satisfied: joblib>=1.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.4.2)\n",
            "Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (4.4.2)\n",
            "Requirement already satisfied: pooch>=1.1 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.8.2)\n",
            "Requirement already satisfied: soxr>=0.3.2 in /usr/local/lib/python3.11/dist-packages (from librosa) (0.5.0.post1)\n",
            "Requirement already satisfied: typing_extensions>=4.1.1 in /usr/local/lib/python3.11/dist-packages (from librosa) (4.13.2)\n",
            "Requirement already satisfied: lazy_loader>=0.1 in /usr/local/lib/python3.11/dist-packages (from librosa) (0.4)\n",
            "Requirement already satisfied: msgpack>=1.0 in /usr/local/lib/python3.11/dist-packages (from librosa) (1.1.0)\n",
            "Requirement already satisfied: cffi>=1.0 in /usr/local/lib/python3.11/dist-packages (from soundfile) (1.17.1)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.0->soundfile) (2.22)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from lazy_loader>=0.1->librosa) (24.2)\n",
            "Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /usr/local/lib/python3.11/dist-packages (from numba>=0.51.0->librosa) (0.43.0)\n",
            "Requirement already satisfied: platformdirs>=2.5.0 in /usr/local/lib/python3.11/dist-packages (from pooch>=1.1->librosa) (4.3.7)\n",
            "Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.11/dist-packages (from pooch>=1.1->librosa) (2.32.3)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=1.1.0->librosa) (3.6.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->pooch>=1.1->librosa) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->pooch>=1.1->librosa) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->pooch>=1.1->librosa) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.19.0->pooch>=1.1->librosa) (2025.1.31)\n",
            "Downloading pydub-0.25.1-py2.py3-none-any.whl (32 kB)\n",
            "Installing collected packages: pydub\n",
            "Successfully installed pydub-0.25.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "(1) 전처리 함수 선언"
      ],
      "metadata": {
        "id": "Dgc9V3DczdPB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# import os\n",
        "# import librosa\n",
        "# import soundfile as sf\n",
        "# import csv\n",
        "# from pathlib import Path\n",
        "\n",
        "# def preprocess_wav_files_with_max_length(phishing_wav_dir: Path, normal_wav_dir: Path,\n",
        "#                                           output_dir: Path, output_csv_path: Path,\n",
        "#                                           sample_rate: int = 16000):\n",
        "#     # 출력 디렉토리 생성\n",
        "#     output_dir.mkdir(parents=True, exist_ok=True)\n",
        "#     output_csv_path.parent.mkdir(parents=True, exist_ok=True)\n",
        "\n",
        "#     # 전체 wav 파일 경로 모음\n",
        "#     phishing_files = [phishing_wav_dir / f for f in os.listdir(phishing_wav_dir) if f.endswith(\".wav\")]\n",
        "#     normal_files = [normal_wav_dir / f for f in os.listdir(normal_wav_dir) if f.endswith(\".wav\")]\n",
        "#     all_files = phishing_files + normal_files\n",
        "\n",
        "#     max_length = 0  # 전체 wav 중 가장 긴 길이 (샘플 수 기준)\n",
        "\n",
        "#     # 1. max_length 측정\n",
        "#     for file_path in all_files:\n",
        "#         y, _ = librosa.load(file_path, sr=sample_rate, mono=True)\n",
        "#         if len(y) > max_length:\n",
        "#             max_length = len(y)\n",
        "\n",
        "#     print(f\"🔍 최대 길이 (샘플 기준): {max_length} samples ≈ {round(max_length/sample_rate, 2)} sec\")\n",
        "\n",
        "#     # 2. 전처리 및 저장\n",
        "#     with open(output_csv_path, mode=\"w\", newline=\"\", encoding=\"utf-8\") as f:\n",
        "#         writer = csv.writer(f)\n",
        "#         writer.writerow([\"filename\", \"label\", \"path\"])\n",
        "\n",
        "#         def process_and_save(file_path, label, new_filename):\n",
        "#             # 오디오 로딩 및 mono/16kHz 변환\n",
        "#             y, _ = librosa.load(file_path, sr=sample_rate, mono=True)\n",
        "\n",
        "#             # 3. padding (가장 긴 길이에 맞춰 fix_length)\n",
        "#             y = librosa.util.fix_length(y, size=max_length)\n",
        "\n",
        "#             # 4. 파일 저장\n",
        "#             output_path = output_dir / new_filename\n",
        "#             sf.write(output_path, y, sample_rate)\n",
        "#             return output_path\n",
        "\n",
        "#         # 5. 피싱 오디오 처리 (label = 1)\n",
        "#         for path in phishing_files:\n",
        "#             name = f\"phishing_{path.name}\"\n",
        "#             out_path = process_and_save(path, 1, name)\n",
        "#             writer.writerow([name, 1, str(out_path)])\n",
        "#             print(f\"✅ phishing 저장 완료: {name}\")\n",
        "\n",
        "#         # 6. 일반 오디오 처리 (label = 0)\n",
        "#         for path in normal_files:\n",
        "#             name = f\"normal_{path.name}\"\n",
        "#             out_path = process_and_save(path, 0, name)\n",
        "#             writer.writerow([name, 0, str(out_path)])\n",
        "#             print(f\"✅ normal 저장 완료: {name}\")\n",
        "\n",
        "#     print(f\"\\n📄 메타데이터 저장 완료: {output_csv_path}\")"
      ],
      "metadata": {
        "id": "fuPBARmsHS4i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from pathlib import Path\n",
        "import os\n",
        "import librosa\n",
        "import soundfile as sf\n",
        "import csv\n",
        "\n",
        "def preprocess_wav_files_with_max_length(phishing_wav_dir: Path, normal_wav_dir: Path,\n",
        "                                          output_dir: Path, output_csv_path: Path,\n",
        "                                          sample_rate: int = 16000):\n",
        "    # 출력 디렉토리 생성\n",
        "    output_dir.mkdir(parents=True, exist_ok=True)\n",
        "    output_csv_path.parent.mkdir(parents=True, exist_ok=True)\n",
        "\n",
        "    # 전체 파일 수 확인\n",
        "    print(f\"📂 phishing 디렉토리: {phishing_wav_dir}\")\n",
        "    print(f\"📂 normal 디렉토리: {normal_wav_dir}\")\n",
        "\n",
        "    phishing_files = [phishing_wav_dir / f for f in os.listdir(phishing_wav_dir) if f.endswith(\".wav\")]\n",
        "    normal_files = [normal_wav_dir / f for f in os.listdir(normal_wav_dir) if f.endswith(\".wav\")]\n",
        "\n",
        "    print(f\"🔎 phishing 파일 수: {len(phishing_files)}개\")\n",
        "    print(f\"🔎 normal 파일 수: {len(normal_files)}개\")\n",
        "\n",
        "    all_files = phishing_files + normal_files\n",
        "    if not all_files:\n",
        "        print(\"❌ 처리할 .wav 파일이 없습니다. 경로 또는 파일 존재 여부를 확인하세요.\")\n",
        "        return\n",
        "\n",
        "    max_length = 0  # 가장 긴 파일 길이 계산\n",
        "    print(\"\\n📏 오디오 길이 측정 중...\")\n",
        "    for i, file_path in enumerate(all_files):\n",
        "        try:\n",
        "            y, _ = librosa.load(file_path, sr=sample_rate, mono=True)\n",
        "            if len(y) > max_length:\n",
        "                max_length = len(y)\n",
        "            if (i + 1) % 10 == 0 or i == len(all_files) - 1:\n",
        "                print(f\"🔹 측정 중... ({i + 1}/{len(all_files)})\")\n",
        "        except Exception as e:\n",
        "            print(f\"⚠️ 오류 발생 (길이 측정 중): {file_path.name} - {e}\")\n",
        "\n",
        "    print(f\"\\n🔍 최대 길이: {max_length} samples ≈ {round(max_length/sample_rate, 2)} sec\\n\")\n",
        "\n",
        "    # 전처리 및 저장\n",
        "    with open(output_csv_path, mode=\"w\", newline=\"\", encoding=\"utf-8\") as f:\n",
        "        writer = csv.writer(f)\n",
        "        writer.writerow([\"filename\", \"label\", \"path\"])\n",
        "\n",
        "        def process_and_save(file_path, label, new_filename):\n",
        "            try:\n",
        "                y, _ = librosa.load(file_path, sr=sample_rate, mono=True)\n",
        "                y = librosa.util.fix_length(y, size=max_length)\n",
        "                output_path = output_dir / new_filename\n",
        "                sf.write(output_path, y, sample_rate)\n",
        "                return output_path\n",
        "            except Exception as e:\n",
        "                print(f\"⚠️ 변환 실패: {file_path.name} - {e}\")\n",
        "                return None\n",
        "\n",
        "        # phishing\n",
        "        print(\"📤 피싱 오디오 처리 시작...\")\n",
        "        for path in phishing_files:\n",
        "            name = f\"phishing_{path.name}\"\n",
        "            out_path = process_and_save(path, 1, name)\n",
        "            if out_path:\n",
        "                writer.writerow([name, 1, str(out_path)])\n",
        "                print(f\"✅ 저장 완료 (phishing): {name}\")\n",
        "\n",
        "        # normal\n",
        "        print(\"\\n📤 일반 오디오 처리 시작...\")\n",
        "        for path in normal_files:\n",
        "            name = f\"normal_{path.name}\"\n",
        "            out_path = process_and_save(path, 0, name)\n",
        "            if out_path:\n",
        "                writer.writerow([name, 0, str(out_path)])\n",
        "                print(f\"✅ 저장 완료 (normal): {name}\")\n",
        "\n",
        "    print(f\"\\n📄 메타데이터 저장 완료: {output_csv_path}\")\n"
      ],
      "metadata": {
        "id": "XGxhAGEycAWi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "(2) 전처리 실행 코드"
      ],
      "metadata": {
        "id": "01JA5XmZzuSN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(phishing_wav_dir.exists())  # True이면 존재, False이면 없음\n",
        "print(normal_wav_dir.exists())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7Lam0n5p0nFv",
        "outputId": "ba373f78-e019-491d-ea47-fe6885ae386c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "True\n",
            "True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.flush_and_unmount()"
      ],
      "metadata": {
        "id": "ZwRo3ZtZaNY2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5rkRjOcaaPFu",
        "outputId": "48740c15-a39d-486b-b5d5-988494160cd8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pathlib import Path\n",
        "\n",
        "# 프로젝트 루트 경로 설정\n",
        "project_path = Path(\"/content/drive/MyDrive/2025_VoicePhshing_Detection_Model\")\n",
        "\n",
        "# 원본 WAV 파일 경로\n",
        "phishing_wav_dir = project_path / \"dataset\" / \"phishing_dataset\" / \"FSS_voicephishing_data\" / \"wav\"\n",
        "normal_wav_dir = project_path / \"dataset\" / \"normal_dataset\" / \"wav\"\n",
        "\n",
        "# 전처리 결과 저장 경로\n",
        "output_dir = project_path / \"dataset\" / \"processed_wav\"  # padding 적용된 wav 저장 폴더\n",
        "output_csv = project_path / \"dataset\" / \"processed_metadata.csv\"  # 메타데이터 CSV 경로\n",
        "\n",
        "# 전처리 함수 호출 (앞서 정의한 함수 사용)\n",
        "preprocess_wav_files_with_max_length(\n",
        "    phishing_wav_dir=phishing_wav_dir,\n",
        "    normal_wav_dir=normal_wav_dir,\n",
        "    output_dir=output_dir,\n",
        "    output_csv_path=output_csv,\n",
        "    sample_rate=16000\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "aV-UmPVtz7DO",
        "outputId": "050b3ff4-ca83-42ba-b9b4-83fa153f605f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "📂 phishing 디렉토리: /content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/phishing_dataset/FSS_voicephishing_data/wav\n",
            "📂 normal 디렉토리: /content/drive/MyDrive/2025_VoicePhshing_Detection_Model/dataset/normal_dataset/wav\n",
            "🔎 phishing 파일 수: 495개\n",
            "🔎 normal 파일 수: 619개\n",
            "\n",
            "📏 오디오 길이 측정 중...\n",
            "🔹 측정 중... (10/1114)\n",
            "🔹 측정 중... (20/1114)\n",
            "🔹 측정 중... (30/1114)\n",
            "🔹 측정 중... (40/1114)\n",
            "🔹 측정 중... (50/1114)\n",
            "🔹 측정 중... (60/1114)\n",
            "🔹 측정 중... (70/1114)\n",
            "🔹 측정 중... (80/1114)\n",
            "🔹 측정 중... (90/1114)\n",
            "🔹 측정 중... (100/1114)\n",
            "🔹 측정 중... (110/1114)\n",
            "🔹 측정 중... (120/1114)\n",
            "🔹 측정 중... (130/1114)\n",
            "🔹 측정 중... (140/1114)\n",
            "🔹 측정 중... (150/1114)\n",
            "🔹 측정 중... (160/1114)\n",
            "🔹 측정 중... (170/1114)\n",
            "🔹 측정 중... (180/1114)\n",
            "🔹 측정 중... (190/1114)\n",
            "🔹 측정 중... (200/1114)\n",
            "🔹 측정 중... (210/1114)\n",
            "🔹 측정 중... (220/1114)\n",
            "🔹 측정 중... (230/1114)\n",
            "🔹 측정 중... (240/1114)\n",
            "🔹 측정 중... (250/1114)\n",
            "🔹 측정 중... (260/1114)\n",
            "🔹 측정 중... (270/1114)\n",
            "🔹 측정 중... (280/1114)\n",
            "🔹 측정 중... (290/1114)\n",
            "🔹 측정 중... (300/1114)\n",
            "🔹 측정 중... (310/1114)\n",
            "🔹 측정 중... (320/1114)\n",
            "🔹 측정 중... (330/1114)\n",
            "🔹 측정 중... (340/1114)\n",
            "🔹 측정 중... (350/1114)\n",
            "🔹 측정 중... (360/1114)\n",
            "🔹 측정 중... (370/1114)\n",
            "🔹 측정 중... (380/1114)\n",
            "🔹 측정 중... (390/1114)\n",
            "🔹 측정 중... (400/1114)\n",
            "🔹 측정 중... (410/1114)\n",
            "🔹 측정 중... (420/1114)\n",
            "🔹 측정 중... (430/1114)\n",
            "🔹 측정 중... (440/1114)\n",
            "🔹 측정 중... (450/1114)\n",
            "🔹 측정 중... (460/1114)\n",
            "🔹 측정 중... (470/1114)\n",
            "🔹 측정 중... (480/1114)\n",
            "🔹 측정 중... (490/1114)\n",
            "🔹 측정 중... (500/1114)\n",
            "🔹 측정 중... (510/1114)\n",
            "🔹 측정 중... (520/1114)\n",
            "🔹 측정 중... (530/1114)\n",
            "🔹 측정 중... (540/1114)\n",
            "🔹 측정 중... (550/1114)\n",
            "🔹 측정 중... (560/1114)\n",
            "🔹 측정 중... (570/1114)\n",
            "🔹 측정 중... (580/1114)\n",
            "🔹 측정 중... (590/1114)\n",
            "🔹 측정 중... (600/1114)\n",
            "🔹 측정 중... (610/1114)\n",
            "🔹 측정 중... (620/1114)\n",
            "🔹 측정 중... (630/1114)\n",
            "🔹 측정 중... (640/1114)\n",
            "🔹 측정 중... (650/1114)\n",
            "🔹 측정 중... (660/1114)\n",
            "🔹 측정 중... (670/1114)\n",
            "🔹 측정 중... (680/1114)\n",
            "🔹 측정 중... (690/1114)\n",
            "🔹 측정 중... (700/1114)\n",
            "🔹 측정 중... (710/1114)\n",
            "🔹 측정 중... (720/1114)\n",
            "🔹 측정 중... (730/1114)\n",
            "🔹 측정 중... (740/1114)\n",
            "🔹 측정 중... (750/1114)\n",
            "🔹 측정 중... (760/1114)\n",
            "🔹 측정 중... (770/1114)\n",
            "🔹 측정 중... (780/1114)\n",
            "🔹 측정 중... (790/1114)\n",
            "🔹 측정 중... (800/1114)\n",
            "🔹 측정 중... (810/1114)\n",
            "🔹 측정 중... (820/1114)\n",
            "🔹 측정 중... (830/1114)\n",
            "🔹 측정 중... (840/1114)\n",
            "🔹 측정 중... (850/1114)\n",
            "🔹 측정 중... (860/1114)\n",
            "🔹 측정 중... (870/1114)\n",
            "🔹 측정 중... (880/1114)\n",
            "🔹 측정 중... (890/1114)\n",
            "🔹 측정 중... (900/1114)\n",
            "🔹 측정 중... (910/1114)\n",
            "🔹 측정 중... (920/1114)\n",
            "🔹 측정 중... (930/1114)\n",
            "🔹 측정 중... (940/1114)\n",
            "🔹 측정 중... (950/1114)\n",
            "🔹 측정 중... (960/1114)\n",
            "🔹 측정 중... (970/1114)\n",
            "🔹 측정 중... (980/1114)\n",
            "🔹 측정 중... (990/1114)\n",
            "🔹 측정 중... (1000/1114)\n",
            "🔹 측정 중... (1010/1114)\n",
            "🔹 측정 중... (1020/1114)\n",
            "🔹 측정 중... (1030/1114)\n",
            "🔹 측정 중... (1040/1114)\n",
            "🔹 측정 중... (1050/1114)\n",
            "🔹 측정 중... (1060/1114)\n",
            "🔹 측정 중... (1070/1114)\n",
            "🔹 측정 중... (1080/1114)\n",
            "🔹 측정 중... (1090/1114)\n",
            "🔹 측정 중... (1100/1114)\n",
            "🔹 측정 중... (1110/1114)\n",
            "🔹 측정 중... (1114/1114)\n",
            "\n",
            "🔍 최대 길이: 58634658 samples ≈ 3664.67 sec\n",
            "\n",
            "📤 피싱 오디오 처리 시작...\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_185.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_184.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_183.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_182.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_181.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_180.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_179.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_178.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_177.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_176.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_175.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_174.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_173.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_172.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_171.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_170.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_169.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_168.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_167.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_166.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_165.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_164.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_163.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_162.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_161.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_160.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_159.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_158.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_157.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_156.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_155.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_154.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_153.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_152.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_151.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_150.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_149.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_148.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_147.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_146.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_145.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_144.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_143.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_142.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_141.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_140.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_139.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_138.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_137.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_136.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_135.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_134.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_133.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_132.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_131.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_130.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_129.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_128.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_127.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_126.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_125.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_124.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_123.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_122.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_121.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_120.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_119.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_118.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_117.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_116.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_115.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_114.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_113.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_112.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_111.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_110.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_109.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_108.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_107.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_106.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_105.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_104.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_103.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_102.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_101.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_100.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_99.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_98.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_97.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_96.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_95.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_94.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_93.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_92.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_91.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_90.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_89.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_88.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_87.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_86.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_85.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_84.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_83.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_82.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_81.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_80.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_79.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_78.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_77.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_76.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_75.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_74.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_73.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_72.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_71.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_70.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_69.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_68.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_67.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_66.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_65.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_64.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_63.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_62.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_61.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_60.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_59.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_58.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_57.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_56.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_55.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_54.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_53.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_52.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_51.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_50.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_49.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_48.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_47.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_46.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_45.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_44.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_43.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_42.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_41.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_40.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_39.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_38.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_37.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_36.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_35.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_34.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_33.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_32.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_31.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_30.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_29.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_28.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_27.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_26.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_25.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_24.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_23.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_22.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_21.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_20.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_19.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_18.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_17.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_16.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_15.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_14.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_13.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_12.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_11.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_10.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_9.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_8.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_7.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_6.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_5.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_4.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_3.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_2.wav\n",
            "✅ 저장 완료 (phishing): phishing_대출사기형_1.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_227.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_226.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_225.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_224.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_223.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_222.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_221.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_220.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_219.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_218.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_217.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_216.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_215.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_214.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_213.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_212.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_211.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_210.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_209.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_208.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_207.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_206.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_205.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_204.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_197.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_196.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_195.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_194.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_193.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_192.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_191.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_190.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_189.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_188.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_187.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_186.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_185.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_184.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_183.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_182.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_181.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_180.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_179.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_178.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_177.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_176.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_175.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_174.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_173.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_171.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_170.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_169.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_168.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_167.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_166.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_165.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_164.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_163.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_162.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_161.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_160.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_159.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_158.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_157.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_156.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_155.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_154.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_153.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_152.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_151.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_150.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_149.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_148.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_147.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_146.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_145.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_144.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_143.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_142.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_141.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_140.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_139.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_138.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_137.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_136.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_135.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_134.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_133.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_132.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_131.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_130.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_129.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_128.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_127.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_126.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_125.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_124.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_123.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_122.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_121.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_120.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_119.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_118.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_117.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_116.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_115.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_114.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_113.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_112.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_111.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_110.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_109.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_108.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_107.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_106.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_105.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_104.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_103.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_102.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_101.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_100.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_99.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_98.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_97.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_96.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_95.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_94.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_93.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_92.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_91.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_90.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_89.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_88.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_87.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_86.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_84.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_83.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_82.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_81.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_80.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_79.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_78.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_75.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_74.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_73.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_72.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_71.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_70.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_69.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_68.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_67.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_66.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_65.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_64.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_63.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_62.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_61.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_60.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_59.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_58.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_57.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_56.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_55.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_54.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_53.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_52.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_51.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_50.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_49.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_48.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_47.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_46.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_45.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_44.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_43.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_42.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_41.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_40.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_39.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_38.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_37.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_36.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_35.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_34.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_33.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_32.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_31.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_30.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_29.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_28.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_27.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_26.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_25.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_24.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_23.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_22.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_21.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_20.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_19.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_18.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_17.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_16.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_15.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_14.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_13.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_12.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_11.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_10.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_9.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_8.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_7.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_6.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_5.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_4.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_3.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_2.wav\n",
            "✅ 저장 완료 (phishing): phishing_수사기관_사칭형_1.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_12_수정07.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_11_수정07.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_10_수정07.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_9_수정06.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_7_수정08.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_8_수정06.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_6_수정08.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_5_수정07.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_4_수정07.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_3_수정07.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_2_수정07.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_금감원_보이스피싱_1_수정08.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_15master.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_7master.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_14번수정.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_17번수정.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_16번수정.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_15번_3차례 신고된 남성 전화금융사기범 (음성_15).wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_13번수정.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_12번_3차례 신고된 남성 전화금융사기범 (음성_12).wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_11번수정.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_10번_3차례 신고된 남성 전화금융사기범 (음성_10).wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_9번_3차례 신고된 남성 전화금융사기범 (음성_9).wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_8번_3차례 신고된 남성 전화금융사기범 (음성_8).wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_6번_3차례 신고된 남성 전화금융사기범 (음성_6).wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_5번수정.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_4차례 신고된 남성 전화금융사기범.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_4차례 신고된 여성 전화금융사기범.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_2번_3차례 신고된 여성 전화금융사기범 (음성_2).wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_6차례 신고된 남성 전화금융사기범 음성 3.wav\n",
            "✅ 저장 완료 (phishing): phishing_기타_6차례 신고된 남성 전화금융사기범 음성 2.wav\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-11-5fcfa542b4ef>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;31m# 전처리 함수 호출 (앞서 정의한 함수 사용)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m preprocess_wav_files_with_max_length(\n\u001b[0m\u001b[1;32m     16\u001b[0m     \u001b[0mphishing_wav_dir\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mphishing_wav_dir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m     \u001b[0mnormal_wav_dir\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnormal_wav_dir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-5-840a437ed2a9>\u001b[0m in \u001b[0;36mpreprocess_wav_files_with_max_length\u001b[0;34m(phishing_wav_dir, normal_wav_dir, output_dir, output_csv_path, sample_rate)\u001b[0m\n\u001b[1;32m     61\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mpath\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mphishing_files\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m             \u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"phishing_{path.name}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 63\u001b[0;31m             \u001b[0mout_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprocess_and_save\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     64\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mout_path\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m                 \u001b[0mwriter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwriterow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-5-840a437ed2a9>\u001b[0m in \u001b[0;36mprocess_and_save\u001b[0;34m(file_path, label, new_filename)\u001b[0m\n\u001b[1;32m     48\u001b[0m         \u001b[0;32mdef\u001b[0m \u001b[0mprocess_and_save\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_filename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 50\u001b[0;31m                 \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlibrosa\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msr\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_rate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmono\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     51\u001b[0m                 \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlibrosa\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutil\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfix_length\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_length\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m                 \u001b[0moutput_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0moutput_dir\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mnew_filename\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/librosa/core/audio.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(path, sr, mono, offset, duration, dtype, res_type)\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;31m# Otherwise try soundfile first, and then fall back if necessary\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 176\u001b[0;31m             \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msr_native\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__soundfile_load\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moffset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mduration\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    177\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    178\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0msf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSoundFileRuntimeError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mexc\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/librosa/core/audio.py\u001b[0m in \u001b[0;36m__soundfile_load\u001b[0;34m(path, offset, duration, dtype)\u001b[0m\n\u001b[1;32m    220\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    221\u001b[0m         \u001b[0;31m# Load the target number of frames, and transpose to match librosa form\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 222\u001b[0;31m         \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msf_desc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mframes\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mframe_duration\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malways_2d\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    223\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    224\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msr_native\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/soundfile.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, frames, dtype, always_2d, fill_value, out)\u001b[0m\n\u001b[1;32m    940\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mframes\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mframes\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    941\u001b[0m                 \u001b[0mframes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 942\u001b[0;31m         \u001b[0mframes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_array_io\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'read'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mframes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    943\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mframes\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    944\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mfill_value\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/soundfile.py\u001b[0m in \u001b[0;36m_array_io\u001b[0;34m(self, action, array, frames)\u001b[0m\n\u001b[1;32m   1392\u001b[0m         \u001b[0;32massert\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitemsize\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_ffi\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msizeof\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1393\u001b[0m         \u001b[0mcdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_ffi\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctype\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'*'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__array_interface__\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1394\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cdata_io\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maction\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mframes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1395\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1396\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_cdata_io\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maction\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mframes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/soundfile.py\u001b[0m in \u001b[0;36m_cdata_io\u001b[0;34m(self, action, data, ctype, frames)\u001b[0m\n\u001b[1;32m   1401\u001b[0m             \u001b[0mcurr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtell\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1402\u001b[0m         \u001b[0mfunc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_snd\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'sf_'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0maction\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'f_'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mctype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1403\u001b[0;31m         \u001b[0mframes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mframes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1404\u001b[0m         \u001b[0m_error_check\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_errorcode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1405\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mseekable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    }
  ]
}